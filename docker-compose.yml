version: '3.8'

services:
  algofi-tracker:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: algofi-tracker-app
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      - FRONTEND_PORT=3000
    volumes:
      - ./logs:/app/logs:rw
    networks:
      - algofi-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /app/logs:noexec,nosuid,size=50m

  # Development service
  algofi-tracker-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: algofi-tracker-dev
    restart: unless-stopped
    ports:
      - "3001:3000"
      - "8001:8000"
    environment:
      - NODE_ENV=development
      - PORT=8000
      - FRONTEND_PORT=3000
    volumes:
      - .:/app:cached
      - /app/node_modules
      - /app/server/node_modules
    networks:
      - algofi-network
    profiles:
      - dev

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: algofi-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - algofi-tracker
    networks:
      - algofi-network
    profiles:
      - production

networks:
  algofi-network:
    driver: bridge
    name: algofi-network

volumes:
  logs:
    driver: local